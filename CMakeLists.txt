CMAKE_MINIMUM_REQUIRED(VERSION 2.8)
PROJECT(downloader)

SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)

SET(CMAKE_C_STANDARD 11)
SET(CMAKE_C_STANDARD_REQUIRED ON)
SET(CMAKE_C_FLAGS "-std=gnu11")
SET(CMAKE_C_EXTENSIONS ON)

SET(CMAKE_CXX_STANDARD 11)
SET(CMAKE_CXX_STANDARD_REQUIRED ON)
SET(CMAKE_CXX_FLAGS "-std=gnu++11")
SET(CMAKE_CXX_EXTENSIONS ON)

SET(CMAKE_BUILD_TYPE DEBUG)

SET(COMMON_FLAGS "-fstack-protector-strong -Wl,-z,relro \
                  -Os -Wall -Werror ")

SET(CMAKE_C_FLAGS ${COMMON_FLAGS})
SET(CMAKE_C_FLAGS_DEBUG ${COMMON_FLAGS})
SET(CMAKE_C_FLAGS_RELEASE ${COMMON_FLAGS})

SET(CMAKE_CXX_FLAGS ${COMMON_FLAGS})
SET(CMAKE_CXX_FLAGS_DEBUG ${COMMON_FLAGS})
SET(CMAKE_CXX_FLAGS_RELEASE ${COMMON_FLAGS})

LINK_LIBRARIES(-lpthread -lm)

SET(CMAKE_EXE_LINKER_FLAGS "-g")

ADD_SUBDIRECTORY(thirdparty/libsir)

INCLUDE_DIRECTORIES(thirdparty/libsir)
INCLUDE_DIRECTORIES(thirdparty/logger)

LINK_DIRECTORIES(${CMAKE_BINARY_DIR}/lib)
LINK_LIBRARIES(logger)

AUX_SOURCE_DIRECTORY(src MAIN_DIR_SRCS)

ADD_EXECUTABLE( ${CMAKE_PROJECT_NAME}
        main.cpp
        thirdparty/logger/logger.cpp
)